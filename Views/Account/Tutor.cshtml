@model InstantTutors.Models.ViewModels.TutorRegisterViewModel

@{
    ViewBag.Title = "Become a Tutor";
}

<div class="container">
    <div class="row">
        <div class="col-12">

            @using (Html.BeginForm("Tutor", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <br />
                    @Html.Raw(@ViewBag.success)
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <h4>Become a Tutor</h4>
                    <p><small>Our online instant tutoring platform makes connecting with students simple, convenient and flexible.</small></p>
                    <hr />
                    <div class="row">

                        <div class="col-12 col-sm-6 col-md-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label lbl-required" })
                                @Html.DropDownListFor(m => m.Title, new List<SelectListItem>
                                {
                                    new SelectListItem{ Text="Mr", Value = "Mr" },
                                    new SelectListItem{ Text="Ms", Value = "Ms" },
                                    new SelectListItem{ Text="Mrs", Value = "Mrs" },
                                    new SelectListItem{ Text="Other", Value = "Other" },
                                 }, "Select Title -", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-12 col-sm-6 col-md-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label lbl-required" })
                                @Html.DropDownListFor(m => m.Gender, new List<SelectListItem>
                                {
                                    new SelectListItem{ Text="Male", Value = "Male" },
                                    new SelectListItem{ Text="Female", Value = "Female" },
                                    new SelectListItem{ Text="Other", Value = "Other" },
                                 }, "Select Gender -", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-12 col-sm-6 col-md-3">
                            <div class="form-group">
                                @*@Html.LabelFor(model => model.ProfileImage, htmlAttributes: new { @class = "control-label lbl" })
                                    <div class="custom-file">
                                        <input type="file" id="customFile" name="file" class="custom-file-input" accept="image/*">
                                        <label class="custom-file-label" for="customFile">Choose file</label>
                                    </div>*@

                                @Html.LabelFor(model => model.File, htmlAttributes: new { @class = "control-label lbl" })
                                <div class="custom-file">
                                    <input type="file" name="@Html.NameFor(model => model.File)" id="@Html.IdFor(model => model.File)" class="custom-file-input" accept="image/*" />
                                    <label class="custom-file-label" for="customFile">Choose file</label>
                                </div>
                                @Html.ValidationMessageFor(model => model.File, "", new { @class = "text-danger" })

                            </div>
                        </div>
                        <div class="col-12 col-sm-6 col-md-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label lbl-required" })
                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(n => n.FirstName) } })
                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-12 col-sm-6 col-md-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label lbl-required" })
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(n => n.LastName) } })
                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-12 col-sm-6 col-md-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label lbl-required" })
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(n => n.Email) } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-12 col-sm-6 col-md-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label lbl-required" })
                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(n => n.Password) } })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-12 col-sm-6 col-md-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label lbl-required" })
                                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(n => n.ConfirmPassword) } })
                                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-12 col-sm-6 col-md-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label lbl-required" })
                                @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(n => n.Mobile) } })
                                @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-12 col-sm-6 col-md-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label lbl-required" })
                                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(n => n.City) } })
                                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-12 col-sm-6 col-md-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label lbl-required" })
                                @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(n => n.Country) } })
                                @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-12 col-sm-6 col-md-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Zip, htmlAttributes: new { @class = "control-label lbl-required" })
                                @Html.EditorFor(model => model.Zip, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(n => n.Zip) } })
                                @Html.ValidationMessageFor(model => model.Zip, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        @*<div class="col-12 col-sm-12">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.GradeLevel, htmlAttributes: new { @class = "control-label lbl-required" })
                                    <div class="col-12 t-grade p-0">
                                        <label class="radio-check col-sm-5 col-md-3 col-lg-2">
                                            9th Grade
                                            @Html.RadioButtonFor(m => m.GradeLevel, "9th Grade", new { @class = "grade form-control" })
                                            <span class="checkmark"></span>
                                        </label>
                                        <label class="radio-check col-sm-5 col-md-3 col-lg-2">
                                            10th Grade
                                            @Html.RadioButtonFor(m => m.GradeLevel, "10th Grade", new { @class = "grade form-control" })
                                            <span class="checkmark"></span>
                                        </label>
                                        <label class="radio-check col-sm-5 col-md-3 col-lg-2">
                                            11th Grade
                                            @Html.RadioButtonFor(m => m.GradeLevel, "11th Grade", new { @class = "grade form-control" })
                                            <span class="checkmark"></span>
                                        </label>
                                        <label class="radio-check col-sm-5 col-md-3 col-lg-2">
                                            12th Grade
                                            @Html.RadioButtonFor(m => m.GradeLevel, "12th Grade", new { @class = "grade form-control" })
                                            <span class="checkmark"></span>
                                        </label>

                                        @Html.ValidationMessageFor(model => model.GradeLevel, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>*@
                        <div class="col-12 col-sm-12 col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.GradeLevel, htmlAttributes: new { @class = "control-label lbl-required col-12 px-0" })
                                <div class="col-12 t-grade p-0">
                                    @*@Html.EditorFor(model => model.GradeLevel, new { htmlAttributes = new { @class = "form-control" } })*@
                                    <label class="radio-check">
                                        9th Grade
                                        @Html.RadioButtonFor(m => m.GradeLevel, "9th Grade", new { @class = "grade form-control" })
                                        <span class="checkmark"></span>
                                    </label>
                                    <label class="radio-check">
                                        10th Grade
                                        @Html.RadioButtonFor(m => m.GradeLevel, "10th Grade", new { @class = "grade form-control" })
                                        <span class="checkmark"></span>
                                    </label>
                                    <label class="radio-check">
                                        11th Grade
                                        @Html.RadioButtonFor(m => m.GradeLevel, "11th Grade", new { @class = "grade form-control" })
                                        <span class="checkmark"></span>
                                    </label>
                                    <label class="radio-check">
                                        12th Grade
                                        @Html.RadioButtonFor(m => m.GradeLevel, "12th Grade", new { @class = "grade form-control" })
                                        <span class="checkmark"></span>
                                    </label>

                                    @Html.ValidationMessageFor(model => model.GradeLevel, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-12 col-sm-12 col-md-6">
                            <div class="form-group">
                                @Html.Label("What subjects are you most comfortable with teaching ? ", htmlAttributes: new { @class = "control-label lbl-required col-12 px-0" })
                                <div class="col-12 px-0">
                                    @for (int i = 0; i < Model.TuitionSubjects.Count; i++)
                                    {
                                        <label class="radio-check">
                                            @Model.TuitionSubjects[i].Name
                                            @Html.CheckBoxFor(m => Model.TuitionSubjects[i].Selected, new { @id = "subject-" + i, @class = "subject form-control" })
                                            @Html.HiddenFor(m => @Model.TuitionSubjects[i].Name)
                                            @Html.HiddenFor(m => @Model.TuitionSubjects[i].Description)
                                            @Html.HiddenFor(m => @Model.TuitionSubjects[i].TutorId)
                                            @Html.HiddenFor(m => @Model.TuitionSubjects[i].Id)
                                            <span class="checkmark-sub"></span>
                                        </label>
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="col-12 col-sm-12 col-md-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.NameOfSchool, htmlAttributes: new { @class = "control-label lbl lbl-required" })
                                @Html.TextAreaFor(model => model.NameOfSchool, 2, 100, new { @class = "form-control", placeholder = Html.DisplayNameFor(n => n.NameOfSchool) })
                                @Html.ValidationMessageFor(model => model.NameOfSchool, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-12 col-sm-12 col-md-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.PreviousSubjects, htmlAttributes: new { @class = "control-label lbl-required" })
                                @Html.TextAreaFor(model => model.PreviousSubjects, 2, 100, new { @class = "form-control", placeholder = Html.DisplayNameFor(n => n.PreviousSubjects) })
                                @Html.ValidationMessageFor(model => model.PreviousSubjects, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-12 col-sm-12 col-md-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Hobbies, htmlAttributes: new { @class = "control-label lbl" })
                                @Html.TextAreaFor(model => model.Hobbies, 2, 100, new { @class = "form-control", placeholder = Html.DisplayNameFor(n => n.Hobbies) })
                                @Html.ValidationMessageFor(model => model.Hobbies, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        @*<div class="col-12 col-sm-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label lbl-required" })
                                    @Html.TextAreaFor(model => model.Address, 2, 100, new { @class = "form-control", placeholder = Html.DisplayNameFor(n => n.Address) })
                                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                </div>
                            </div>*@
                        <div class="col-12 col-sm-12">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Bio, htmlAttributes: new { @class = "control-label lbl" })
                                @Html.TextAreaFor(model => model.Bio, 2, 100, new { @class = "form-control", placeholder = Html.DisplayNameFor(n => n.Bio) })
                                @Html.ValidationMessageFor(model => model.Bio, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-12 col-sm-12">
                            <div class="form-group">
                                @Html.TextAreaFor(model => model.TermsnCondition, 2, 100, new { @class = "form-control", @disabled="disabled"})
                                <p>
                                    @Html.CheckBoxFor(model => model.IschkTrmCondition)
                                    Check out our <a href="#">Terms and Conditions FAQ</a> for more helpful insight into these important agreements.
                                </p>
                                @Html.ValidationMessageFor(model => model.IschkTrmCondition, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="col-12 text-center">
                            <div class="form-group bottom-section">
                                <hr />
                                <input type="submit" value="Become A Tutor" class="btn submit-btn btn-success btn-lg" onclick="this.disabled=true;this.form.submit();" />&nbsp;
                                @Html.ActionLink("Already have an account? Please SignIn", "Login", "Account", null, new { hidefocus = "hidefocus" })
                            </div>
                        </div>
                    </div>
                </div>
            }

        </div>
    </div>
</div>
<style>

    .t-grade .radio-check {
        /*display: inline-flex !important;*/
    }

    @@media only screen and (max-width: 767px) {
        .bottom-section a {
            margin-top: 12px;
            display: block;
        }
    }

    .custom-file-label {
        text-overflow: ellipsis;
        overflow: hidden;
        white-space: nowrap;
    }
</style>
